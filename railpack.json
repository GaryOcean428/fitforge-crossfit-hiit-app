{
  "$schema": "https://schema.railpack.com",
  "name": "muscles-flask-react",
  "version": "1.0.0",
  "builder": "railpack",
  "services": [
    {
      "id": "main",
      "type": "multi-runtime",
      "languages": ["python", "node"],
      "python": {
        "version": "3.11",
        "packages": [
          "flask",
          "flask-cors",
          "flask-sqlalchemy",
          "flask-jwt-extended",
          "gunicorn",
          "psycopg2-binary",
          "redis",
          "openai",
          "stripe",
          "google-auth",
          "google-auth-oauthlib",
          "google-auth-httplib2",
          "google-api-python-client",
          "groq",
          "python-dotenv",
          "requests",
          "pytest",
          "pytest-cov",
          "pytest-mock"
        ],
        "requirements": "backend/crossfit-api/requirements.txt",
        "app": "backend.crossfit-api.src.main:app"
      },
      "node": {
        "version": "20",
        "packageManager": "pnpm",
        "buildCommand": "cd frontend/crossfit-web && pnpm install --frozen-lockfile && pnpm build",
        "buildDirectory": "frontend/crossfit-web/dist"
      },
      "buildAptPackages": [
        "libpq-dev",
        "build-essential",
        "curl",
        "git"
      ],
      "steps": [
        {
          "type": "build",
          "name": "frontend-build",
          "runtime": "node",
          "commands": [
            "cd frontend/crossfit-web",
            "pnpm install --frozen-lockfile",
            "NODE_OPTIONS=--max-old-space-size=4096 pnpm build"
          ]
        },
        {
          "type": "build",
          "name": "backend-setup",
          "runtime": "python",
          "commands": [
            "cd backend/crossfit-api",
            "pip install --upgrade pip wheel setuptools",
            "pip install -r requirements.txt",
            "pip install gunicorn"
          ]
        },
        {
          "type": "setup",
          "name": "prepare-directories",
          "commands": [
            "mkdir -p /app/var/uploads",
            "mkdir -p /app/var/log",
            "mkdir -p /app/var/tmp",
            "mkdir -p /app/backend/crossfit-api/src/static"
          ]
        },
        {
          "type": "setup",
          "name": "copy-frontend-build",
          "commands": [
            "cp -r frontend/crossfit-web/dist/* backend/crossfit-api/src/static/ || echo 'Frontend build not found, continuing...'"
          ],
          "inputs": [{ "step": "frontend-build" }]
        }
      ],
      "start": {
        "command": "cd backend/crossfit-api && gunicorn --bind 0.0.0.0:${PORT:-8000} --workers ${WORKERS:-3} --threads ${THREADS:-2} --timeout 120 --keep-alive 5 --access-logfile - --error-logfile - --log-level ${LOG_LEVEL:-info} src.main:app",
        "runtime": "python"
      },
      "healthcheck": {
        "path": "/api/health",
        "interval": 30,
        "timeout": 10,
        "retries": 3,
        "startPeriod": 60
      },
      "readinessCheck": {
        "path": "/api/health",
        "interval": 10,
        "timeout": 5
      },
      "staticFiles": {
        "source": "frontend/crossfit-web/dist",
        "destination": "/app/backend/crossfit-api/src/static",
        "mount": "/",
        "cacheControl": "public, max-age=31536000, immutable"
      },
      "mounts": [
        {
          "name": "uploads",
          "path": "/app/var/uploads",
          "type": "persistent",
          "size": "10Gi"
        },
        {
          "name": "logs",
          "path": "/app/var/log",
          "type": "persistent",
          "size": "5Gi"
        },
        {
          "name": "tmp",
          "path": "/app/var/tmp",
          "type": "ephemeral"
        }
      ],
      "env": {
        "PYTHONUNBUFFERED": "1",
        "PYTHONDONTWRITEBYTECODE": "1",
        "NODE_ENV": "production",
        "WORKERS": "3",
        "THREADS": "2",
        "LOG_LEVEL": "info",
        "FLASK_ENV": "production",
        "CORS_ALLOWED_ORIGINS": "*",
        "PORT": "8000"
      },
      "secrets": [
        "DATABASE_URL",
        "DATABASE_PRIVATE_URL",
        "REDIS_URL",
        "SECRET_KEY",
        "OPENAI_API_KEY",
        "GROQ_API_KEY",
        "STRIPE_SECRET_KEY",
        "STRIPE_PUBLISHABLE_KEY",
        "GOOGLE_CLIENT_ID",
        "GOOGLE_CLIENT_SECRET",
        "MICROSOFT_CLIENT_ID"
      ],
      "resources": {
        "cpu": "2",
        "memory": "4Gi"
      },
      "scaling": {
        "minInstances": 1,
        "maxInstances": 3,
        "targetCPU": 70,
        "targetMemory": 80
      },
      "restartPolicy": {
        "type": "on-failure",
        "maxRetries": 3
      }
    }
  ],
  "hooks": {
    "preBuild": [
      "echo 'Starting Railpack build for muscles project'",
      "export BUILD_ID=$(git rev-parse --short HEAD)",
      "echo BUILD_ID=$BUILD_ID >> .env.build"
    ],
    "postBuild": [
      "echo 'Build completed successfully'",
      "ls -la frontend/crossfit-web/dist/ || echo 'No frontend build found'"
    ],
    "preDeploy": [
      "echo 'Running pre-deployment checks'",
      "cd backend/crossfit-api && python -c 'import src.main; print(\"Flask app imported successfully\")'"
    ]
  },
  "monitoring": {
    "metrics": {
      "enabled": true,
      "path": "/api/metrics",
      "format": "prometheus"
    },
    "logging": {
      "level": "${LOG_LEVEL:-info}",
      "format": "json",
      "destination": "stdout"
    }
  }
}